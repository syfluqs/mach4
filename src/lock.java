
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * main.java
 *
 * Created on Sep 11, 2012, 8:05:12 PM
 */
/**
 *
 * @author Subham
 */
public class lock extends javax.swing.JFrame {

    static String password = "";
    static int he = 0;
    static int wi = 0;
    static int length = 0;
    static int i =0;
    static String[] envp = {""};
    static int speed = 10;
    
    /** Creates new form main */
    public lock() throws FileNotFoundException, IOException {
        initComponents();
        
        try{speed = Integer.parseInt(iniparser.iniread("settings.ini", "screen_locker", "curtain_raise_speed"));}
        catch (Exception e){speed = 10;if (chassis.debug==true)System.out.println("Error in reading curtain_raise_speed value. found="+iniparser.iniread("settings.ini", "lockscreen", "unlock_speed"));}
        
        processor.pr = processor.rt.exec("AutoHotkey.exe lockdown.module on");
        chassis.frame.setVisible(false);
        
        time_label.setText(iniparser.iniread("settings.ini", "core", "lock_screen_start_text"));
        
        clock();
        
        
        time_label.setBackground(new Color(255,255,255,0));
        
        ComponentMover p1 = new ComponentMover();
        p1.setEdgeInsets(new Insets(0,0,0,0));
        p1.registerComponent(jPanel3);
        
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize(); 
                int height=dim.height;
                he = height;
                int width=dim.width;
                wi = width;
                jTextField1.setText(""+width);
                jPanel1.setBounds(-10, he-jPanel1.getSize().height, width+20, 30);
                setBounds(0,0,width,height);
                jLabel2.setBounds(0, 0, width, height);
                jLabel1.setBounds(0,0,width, (int) Math.floor(0.05*height));
                
                //BasicSliderUI sliderUI = new javax.swing.plaf.basic.BasicSliderUI(jSlider1){
        //protected Dimension getThumbSize() {
         //     return new Dimension(60, 60);
              
              
              
          //}
      //};
                
    //jInternalFrame1.setBackground(new Color(255,255,255,0));
    //jInternalFrame1.setForeground(new Color(255,255,255,0));
                
    
                
    //jSlider1.setUI(sliderUI);
    //jSlider1.setForeground(new Color(255,255,255,0));
    //jSlider1.setBackground(new Color(255,255,255,0));

    password = iniparser.iniread("settings.ini", "screen_locker", "password");
    length = password.length();
   
    
    jLabel2.setIcon(new ImageIcon(iniparser.iniread("settings.ini", "screen_locker", "background image")));
    
    
    jPanel3.setLocation(wi-(jPanel3.getSize().width) ,he-(jPanel1.getSize().height+jPanel3.getSize().height+3));
    //System.out.println(new Point(time_label.getLocation()).x +" "+ new Point(time_label.getLocation()).y);
    //System.out.println(jPasswordField1.getSize().height+jSlider1.getSize().height+" "+jPanel1.getSize().height);
    
    //slide.setLocation(width-slide.getSize().width-3,height - slide.getSize().height -2);
    
    jPasswordField1.setSize(jPasswordField1.getSize().width, 30);
    
    
    
    }
    
  
                
        
   
    
   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        time_label = new javax.swing.JLabel();
        date_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        
		if (chassis.jvd>=1.7)
			setType(java.awt.Window.Type.UTILITY);
		else
			System.out.println("lock: Utiltiy window type not supported.");
			
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 400, 29);

        jPanel1.setOpaque(false);

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 8));
        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPasswordField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 300, 470, 30);

        jPanel3.setOpaque(false);

        time_label.setFont(new java.awt.Font("Ubuntu Light", 0, 130));
        time_label.setForeground(new java.awt.Color(255, 255, 255));
        time_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time_label.setText("mach4");

        date_label.setFont(new java.awt.Font("Ubuntu Light", 0, 48));
        date_label.setForeground(new java.awt.Color(255, 255, 255));
        date_label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        date_label.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_label, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(time_label, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(date_label, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(time_label, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(10, 50, 720, 240);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setMaximumSize(new java.awt.Dimension(1920, 3000));
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 400, 290);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

}//GEN-LAST:event_formComponentShown

private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        
    if (jPasswordField1.getText().equals(password))
{
    

    i=0;
    
    curtainraise();
            try {
                
                
                
                chassis.frame.setVisible(true);
                
                processor.rt.exec("AutoHotkey.exe lockdown.module off");
                
            } catch (IOException ex) {
                Logger.getLogger(lock.class.getName()).log(Level.SEVERE, null, ex);
            }
    
}
else
{
    jLabel1.setText("Your password is wrong. Try again");
}

}//GEN-LAST:event_jPasswordField1ActionPerformed

private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped

}//GEN-LAST:event_jPasswordField1KeyTyped

private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
i=i+1;

if (evt.getKeyCode()==10 || evt.getKeyCode()==40 || evt.getKeyCode()==8)
i-=1;



if (i==length)
{
    if (jPasswordField1.getText().equals(password))
{
    
    i=0;
    
    curtainraise();
            try {
                
                chassis.frame.setVisible(true);
                
                processor.rt.exec("AutoHotkey.exe lockdown.module off");
                
                
                
                
            } catch (IOException ex) {
                Logger.getLogger(lock.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    
}
}
}//GEN-LAST:event_jPasswordField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    
                    
                    new lock().setVisible(true);
                    
                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(lock.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(lock.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel date_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel time_label;
    // End of variables declaration//GEN-END:variables

   
    private void clock()
    {
        
        
            TimerTask cl_repeater = new TimerTask(){
    public void run()
    {
        
        time_label.setText(timekeeper.time+" "+timekeeper.apmarker.toLowerCase());
        time_label.repaint();
        date_label.setText(timekeeper.dt);
        date_label.repaint();
        
    } 
};

        Timer clocktimer = new Timer("clock_check",true);
        clocktimer.schedule(cl_repeater, 2000, 1000);
    }

    private void curtainraise() {
        
        
    final Timer raisecurtain = new Timer();
   
    TimerTask cr = new TimerTask()
        {
            int i=0;
          public void run()
          {
              if (i>=chassis.height*(-1) && i<=chassis.height)
              {
                  i-=speed;
                  setLocation(0,i);
              }
              else
              {
                  raisecurtain.cancel();
                  setVisible(false);
              }
          }
        };
        
        raisecurtain.schedule(cr, 1, 1);
        
    }
}
